server:
  port: 28888
  servlet:
    context-path: /test-code
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 1000
    threads:
      # tomcat最大线程数，默认为200
      max: 800
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 100

logging:
  # 配置日志位置
  file:
    path: /logs/test-code/test-code.out
  # 配置日志输出格式（定位到哪行输出，方便排查）
  pattern:
    console: '%d{HH:mm:ss.SSS} %-5level %logger{36} [%line] - %msg%n'
  level:
    com.codetime: info
    org.springframework: info

# Spring配置
spring:
  application:
    name: test-code-server-backstage
  profiles: 
    active: dev
  # 文件上传
  servlet:
     multipart:
       # 单个文件大小
       max-file-size:  10MB
       # 设置总上传的文件大小
       max-request-size:  20MB
  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true
  # redis 配置
  redis:
    host: localhost
    port: 6379
    database: 0
    password: 123456
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms

# MyBatis配置
mybatis:
    # 搜索指定包别名
    typeAliasesPackage: com.codetime.**.domain
    # 配置mapper的扫描，找到所有的mapper.xml映射文件
    mapperLocations: classpath*:mapper/**/*Mapper.xml
    # 加载全局的配置文件
    configLocation: classpath:mybatis/mybatis-config.xml

# PageHelper分页插件
pagehelper: 
  helperDialect: mysql
  supportMethodsArguments: true
  params: count=countSql

# 防止XSS攻击
xss: 
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/notice
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*

#自定义参数
define:
  userinfo:
    username: 666666
    age: 88
  quartz:
    cron: "*/5 * * * * ?"